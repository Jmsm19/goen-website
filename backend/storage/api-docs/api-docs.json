{
    "openapi": "3.0.0",
    "info": {
        "title": "GOEN API",
        "contact": {
            "name": "Jorge Soto",
            "email": "jorgemsm@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/signup": {
            "post": {
                "tags": [
                    "Model: User"
                ],
                "summary": "Create user and send notification to validate email and user.",
                "operationId": "userSignup",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "national_id",
                        "in": "query",
                        "description": "User's national identification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "password"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "User's password confirmation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "password"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "User's birth_date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signup"
                    }
                }
            }
        },
        "/api/auth/signup/activate/{token}": {
            "get": {
                "tags": [
                    "Model: User"
                ],
                "summary": "Activate user based on activation token.",
                "operationId": "userSignupActivate",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Activation token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activated and email confirmed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Model: User"
                ],
                "summary": "Login user and return API Token",
                "operationId": "userLogin",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "tags": [
                    "Model: User"
                ],
                "summary": "Logout user and invalidate Auth Token",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Model: User"
                ],
                "summary": "Get logged in user",
                "operationId": "getLoggedInUser",
                "responses": {
                    "200": {
                        "description": "Return logged in user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleUser"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/clan": {
            "get": {
                "tags": [
                    "Model: Clan"
                ],
                "summary": "Display a listing of Clans",
                "operationId": "getAllClans",
                "responses": {
                    "200": {
                        "description": "Clans found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClanCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/clan/{clan}": {
            "get": {
                "tags": [
                    "Model: Clan"
                ],
                "summary": "Get a Clan by Id",
                "operationId": "getClanById",
                "parameters": [
                    {
                        "name": "clan",
                        "in": "path",
                        "description": "Id of clan",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clan found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleClan"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Model: Clan"
                ],
                "summary": "Update clan data",
                "operationId": "updateClan",
                "parameters": [
                    {
                        "name": "clan",
                        "in": "path",
                        "description": "Id of clan",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Clan's new name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "picture",
                        "in": "query",
                        "description": "Clan's new picture url",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated clan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleClan"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: Clan"
                ],
                "summary": "Delete clan",
                "operationId": "deleteClan",
                "parameters": [
                    {
                        "name": "clan",
                        "in": "path",
                        "description": "Id of clan",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Clan deleted"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/grade": {
            "get": {
                "tags": [
                    "Model: Grade",
                    "Role: Instructor"
                ],
                "summary": "Display a listing of Grades",
                "operationId": "getAllGrades",
                "responses": {
                    "200": {
                        "description": "Grades found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GradeCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Model: Grade",
                    "Role: Instructor"
                ],
                "summary": "Store grade",
                "operationId": "storeGrade",
                "parameters": [
                    {
                        "name": "score",
                        "in": "query",
                        "description": "Grade's score",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "module_id",
                        "in": "query",
                        "description": "Grade's module id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Grade's user id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns created grade",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleGrade"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/grade/{grade}": {
            "get": {
                "tags": [
                    "Model: Grade",
                    "Role: Instructor"
                ],
                "summary": "Get a Grade by Id",
                "operationId": "getGradeById",
                "parameters": [
                    {
                        "name": "grade",
                        "in": "path",
                        "description": "Id of grade",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grade found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleGrade"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Model: Grade",
                    "Role: Instructor"
                ],
                "summary": "Update grade data",
                "operationId": "updateGrade",
                "parameters": [
                    {
                        "name": "grade",
                        "in": "path",
                        "description": "Id of grade",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "score",
                        "in": "query",
                        "description": "Grade's new score",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated grade",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleGrade"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: Grade",
                    "Role: Instructor"
                ],
                "summary": "Delete grade",
                "operationId": "deleteGrade",
                "parameters": [
                    {
                        "name": "grade",
                        "in": "path",
                        "description": "Id of grade",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Grade deleted"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/module": {
            "get": {
                "tags": [
                    "Model: Module"
                ],
                "summary": "Display a listing of Grades",
                "operationId": "getAllGrades",
                "responses": {
                    "200": {
                        "description": "Modules found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModuleCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Model: Module"
                ],
                "summary": "Store module",
                "operationId": "storeModule",
                "parameters": [
                    {
                        "name": "period_id",
                        "in": "query",
                        "description": "Module's period",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Module's name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "section",
                        "in": "query",
                        "description": "Module's section",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Module's price",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "schedule_id",
                        "in": "query",
                        "description": "Module's schedule",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns created module",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleModule"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Module already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/module/{module}": {
            "get": {
                "tags": [
                    "Model: Module"
                ],
                "summary": "Get a Module by Id",
                "operationId": "getModuleById",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Id of module",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleModule"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Model: Module"
                ],
                "summary": "Update module data",
                "operationId": "updateModule",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Id of module",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "period_id",
                        "in": "query",
                        "description": "Module's period",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Module's name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "section",
                        "in": "query",
                        "description": "Module's section",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Module's price",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "schedule_id",
                        "in": "query",
                        "description": "Module's schedule",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated module",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleModule"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: Module"
                ],
                "summary": "Delete module",
                "operationId": "deleteModule",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Id of module",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Module deleted"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/module/availablesections/{period_id}/{name}": {
            "get": {
                "tags": [
                    "Model: Module"
                ],
                "summary": "Display a listing of Grades",
                "operationId": "getAvailableSectionsForPeriodModule",
                "parameters": [
                    {
                        "name": "period_id",
                        "in": "path",
                        "description": "Id of Period",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Module name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of the sections available for Module creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableSections"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/period": {
            "get": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Display a listing of Periods",
                "operationId": "getAllPeriods",
                "responses": {
                    "200": {
                        "description": "Periods found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PeriodCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Store period",
                "operationId": "storePeriod",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Period's year",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signup_from",
                        "in": "query",
                        "description": "Period's registrations start date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "signup_until",
                        "in": "query",
                        "description": "Period's registrations end date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "make_current",
                        "in": "query",
                        "description": "Should it be created as current active Period",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns created period",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePeriod"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Period limit reached for the year.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/period/{period}": {
            "get": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Get a Period by Id",
                "operationId": "getPeriodById",
                "parameters": [
                    {
                        "name": "period",
                        "in": "path",
                        "description": "Id of period",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Period found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePeriod"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Delete period",
                "operationId": "deletePeriod",
                "parameters": [
                    {
                        "name": "period",
                        "in": "path",
                        "description": "Id of period",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Period deleted"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/Period/{Period}": {
            "put": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Update period data",
                "operationId": "updatePeriod",
                "parameters": [
                    {
                        "name": "period",
                        "in": "path",
                        "description": "Id of period",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Period's name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Period's year",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signup_from",
                        "in": "query",
                        "description": "Period's registrations start date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "signup_until",
                        "in": "query",
                        "description": "Period's registrations end date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated Period",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePeriod"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/period/current": {
            "get": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Get active Period",
                "description": "",
                "operationId": "getCurrentPeriod",
                "responses": {
                    "200": {
                        "description": "Period found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePeriod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/period/year/{year}": {
            "get": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Get all data for the current year's or the given year's periods",
                "operationId": "getPeriodByYear",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year of the period to fetch",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Period found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SinglePeriod"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/period/current/students": {
            "get": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Get students of current active Period",
                "operationId": "getStudentsOfCurrentPeriod",
                "responses": {
                    "200": {
                        "description": "Period and students found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentPeriodStudents"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/period/{period}/make-current": {
            "post": {
                "tags": [
                    "Model: Period"
                ],
                "summary": "Make period the current active one",
                "operationId": "makePeriodCurrent",
                "responses": {
                    "200": {
                        "description": "Period and students found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePeriod"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/price": {
            "get": {
                "tags": [
                    "Model: Price",
                    "Role: Admin"
                ],
                "summary": "Display a listing of Prices",
                "operationId": "getAllPrices",
                "responses": {
                    "200": {
                        "description": "Prices found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PriceCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Model: Price",
                    "Role: Admin"
                ],
                "summary": "Store price",
                "operationId": "storePrice",
                "parameters": [
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Price's amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns created price",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePrice"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/price/{price}": {
            "get": {
                "tags": [
                    "Model: Price",
                    "Role: Admin"
                ],
                "summary": "Get a Price by Id",
                "operationId": "getPriceById",
                "parameters": [
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Id of price",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePrice"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Model: Price",
                    "Role: Admin"
                ],
                "summary": "Update price data",
                "operationId": "updatePrice",
                "parameters": [
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Id of price",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Price's new score",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated price",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SinglePrice"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: Price",
                    "Role: Admin"
                ],
                "summary": "Delete price",
                "operationId": "deletePrice",
                "parameters": [
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Id of price",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Price deleted"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/users/{id}/{role}": {
            "put": {
                "tags": [
                    "Model: Role",
                    "Role: Admin"
                ],
                "summary": "Add Role to specified user",
                "operationId": "addRoleToUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role added to User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User already has role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: Role",
                    "Role: Admin"
                ],
                "summary": "Remove Role from specified user",
                "operationId": "removeRoleFromUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role removed from User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error due to: admins can't change their own roles as admins, user does not have role, user must have at least one role, etc.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/schedule": {
            "get": {
                "tags": [
                    "Model: Schedule"
                ],
                "summary": "Display a listing of Grades",
                "operationId": "getAllGrades",
                "responses": {
                    "200": {
                        "description": "Schedules found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScheduleCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Model: Schedule"
                ],
                "summary": "Store schedule",
                "operationId": "storeSchedule",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Class date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Class start time",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "description": "Class end time",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns created schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleSchedule"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Schedule already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/schedule/{schedule}": {
            "get": {
                "tags": [
                    "Model: Schedule"
                ],
                "summary": "Get a Schedule by Id",
                "operationId": "getScheduleById",
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "Id of schedule",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleSchedule"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Model: Schedule"
                ],
                "summary": "Update schedule data",
                "operationId": "updateSchedule",
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "Id of schedule",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Class start time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "description": "Class end time",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleSchedule"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: Schedule"
                ],
                "summary": "Delete schedule",
                "operationId": "deleteSchedule",
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "Id of schedule",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Schedule deleted"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/module/{module}/register": {
            "post": {
                "tags": [
                    "Role: Student"
                ],
                "summary": "If possible, register student in module.",
                "operationId": "studentRegister",
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Id of module",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error due to: registration_outside_threshold, already_registered_in_module, only_one_module_per_period, wrong_next_module, module_full, etc.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/module/register/send-capture": {
            "post": {
                "tags": [
                    "Role: Student"
                ],
                "summary": "Upload transfer capture image to Dropbox's comprobantes folder.",
                "operationId": "uploadTransferCapture",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Bank transfer confirmation picture.",
                                        "type": "file",
                                        "format": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful image upload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageUploaded"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/student/{student}/confirm-payment": {
            "post": {
                "tags": [
                    "Role: Admin"
                ],
                "summary": "Confirm student payment.",
                "description": "Email is sent to notify student.",
                "operationId": "confirmPayment",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "description": "Id of student",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful payment confirmation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/student/{student}/reject-payment": {
            "post": {
                "tags": [
                    "Role: Admin"
                ],
                "summary": "Reject student payment.",
                "description": "Email is sent to notify student.",
                "operationId": "rejectPayment",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "description": "Id of student",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful payment confirmation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Model: User",
                    "Role: Admin"
                ],
                "summary": "Display a listing of Users",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "Users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/user/{user}": {
            "get": {
                "tags": [
                    "Model: User",
                    "Role: Admin"
                ],
                "summary": "Get a User by Id",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleUser"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Model: User",
                    "Role: Admin"
                ],
                "summary": "Update user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's new name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "User's new phone number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "User's new birth_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No privilages. Only Admin user or owner can update data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Model: User",
                    "Role: Admin"
                ],
                "summary": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Clan": {
                "title": "Clan",
                "description": "Clan model",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Clan name",
                        "type": "string"
                    },
                    "picture": {
                        "title": "picture",
                        "description": "Clan picture",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Grade": {
                "title": "Grade",
                "description": "Grade model",
                "required": [
                    "id",
                    "score",
                    "module_id",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "score": {
                        "title": "score",
                        "description": "User's score in module",
                        "type": "number",
                        "format": "double"
                    },
                    "module_id": {
                        "title": "module_id",
                        "description": "Module in which the user got the score.",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "User to whom the score belongs.",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Module": {
                "title": "Module",
                "description": "Module model",
                "required": [
                    "id",
                    "name",
                    "section",
                    "period_id",
                    "schedule_id",
                    "price_id",
                    "instructor_id"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Module name",
                        "type": "string"
                    },
                    "section": {
                        "title": "section",
                        "description": "Module section",
                        "type": "string"
                    },
                    "period_id": {
                        "title": "period_id",
                        "description": "Period to whom the module belongs",
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_id": {
                        "title": "schedule_id",
                        "description": "Schedule where the module takes places.",
                        "type": "integer",
                        "format": "int64"
                    },
                    "price_id": {
                        "title": "price_id",
                        "description": "Price to register in module.",
                        "type": "integer",
                        "format": "int64"
                    },
                    "clan_id": {
                        "title": "clan_id",
                        "description": "If M0, the module needs a clan to give new students.",
                        "type": "integer",
                        "format": "int64"
                    },
                    "instructor_id": {
                        "title": "instructor_id",
                        "description": "Instructor in charge of the module.",
                        "type": "integer",
                        "format": "int64"
                    },
                    "assistant_id": {
                        "title": "assistant_id",
                        "description": "Instructor's assistant in the module.",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Period": {
                "title": "Period",
                "description": "Period model",
                "required": [
                    "id",
                    "name",
                    "year",
                    "active",
                    "signup_from",
                    "signup_until"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Period name",
                        "type": "string"
                    },
                    "year": {
                        "title": "year",
                        "description": "Period's year",
                        "type": "string"
                    },
                    "active": {
                        "title": "active",
                        "description": "Is period currently ongoing",
                        "type": "boolean"
                    },
                    "signup_from": {
                        "title": "signup_from",
                        "description": "Period registration start date. YYYY-MM-DD",
                        "type": "string",
                        "format": "date"
                    },
                    "signup_until": {
                        "title": "signup_until",
                        "description": "Period registration finish date. YYYY-MM-DD",
                        "type": "string",
                        "format": "date"
                    },
                    "modules": {
                        "title": "modules",
                        "description": "Period modules",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Module"
                        }
                    }
                },
                "type": "object"
            },
            "Price": {
                "title": "Price",
                "description": "Modules possible registration price",
                "required": [
                    "id",
                    "amount"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "amount": {
                        "title": "amount",
                        "description": "Price",
                        "type": "number",
                        "format": "double"
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Users possible roles in the platform",
                "required": [
                    "id",
                    "name",
                    "description"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Role name",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "description": "Role description",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Schedule": {
                "title": "Schedule",
                "description": "Modules possible schedule",
                "required": [
                    "id",
                    "start_date",
                    "from",
                    "until"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "start_date": {
                        "title": "start_date",
                        "description": "Day in which the class takes places. YYYY-MM-DD",
                        "type": "string",
                        "format": "date"
                    },
                    "from": {
                        "title": "from",
                        "description": "Start time of the class. HH:MM:SS",
                        "type": "string"
                    },
                    "until": {
                        "title": "until",
                        "description": "Time in which the class ends. HH:MM:SS",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DataWrapperExample": {
                "properties": {
                    "data": {
                        "description": "Obeject Schema, data wrapper",
                        "properties": {
                            "expiresAt": {
                                "title": "expiresAt",
                                "description": "Token expiration date",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "title": "error",
                        "description": "Error message",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResponseMessage": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "title": "message",
                        "description": "Response message",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LoginData": {
                "description": "Login response",
                "properties": {
                    "accessToken": {
                        "title": "accessToken",
                        "description": "API Auth Token",
                        "type": "string"
                    },
                    "tokenType": {
                        "title": "tokenType",
                        "description": "Token type",
                        "type": "string"
                    },
                    "expiresAt": {
                        "title": "expiresAt",
                        "description": "Token expiration date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AvailableSections": {
                "description": "Sections available for Module creation",
                "properties": {
                    "modules_available": {
                        "title": "modules_available",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "CurrentPeriodStudents": {
                "description": "Login response",
                "properties": {
                    "period": {
                        "title": "period",
                        "$ref": "#/components/schemas/Period"
                    },
                    "students": {
                        "title": "students",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "ImageUploaded": {
                "description": "Login response",
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "url": {
                        "title": "url",
                        "type": "string"
                    },
                    "status": {
                        "title": "status",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SingleClan": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Clan"
                    }
                },
                "type": "object"
            },
            "ClanCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Clan"
                        }
                    }
                },
                "type": "object"
            },
            "SingleGrade": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Grade"
                    }
                },
                "type": "object"
            },
            "GradeCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Grade"
                        }
                    }
                },
                "type": "object"
            },
            "SingleModule": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Module"
                    }
                },
                "type": "object"
            },
            "ModuleCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Module"
                        }
                    }
                },
                "type": "object"
            },
            "SinglePeriod": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Period"
                    }
                },
                "type": "object"
            },
            "PeriodCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Period"
                        }
                    }
                },
                "type": "object"
            },
            "SinglePrice": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Price"
                    }
                },
                "type": "object"
            },
            "PriceCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Price"
                        }
                    }
                },
                "type": "object"
            },
            "SingleRole": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Role"
                    }
                },
                "type": "object"
            },
            "RoleCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                },
                "type": "object"
            },
            "SingleSchedule": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Schedule"
                    }
                },
                "type": "object"
            },
            "ScheduleCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Schedule"
                        }
                    }
                },
                "type": "object"
            },
            "SingleUser": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "UserCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "name",
                    "national_id",
                    "email",
                    "password",
                    "phone_number",
                    "birth_date",
                    "active",
                    "registration_status"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Unique identificator",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "User name",
                        "type": "string"
                    },
                    "national_id": {
                        "title": "national_id",
                        "description": "User's national identification",
                        "type": "string"
                    },
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string"
                    },
                    "password": {
                        "title": "password",
                        "description": "User password",
                        "type": "string",
                        "format": "password"
                    },
                    "phone_number": {
                        "title": "phone_number",
                        "description": "User phone number",
                        "type": "string"
                    },
                    "birth_date": {
                        "title": "birth_date",
                        "description": "User birth date",
                        "type": "string",
                        "format": "date"
                    },
                    "active": {
                        "title": "active",
                        "description": "User is active and has a confirmed email",
                        "type": "boolean"
                    },
                    "registration_status": {
                        "title": "registration_status",
                        "description": "Current registration status as a student of GOEN",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "404": {
                "description": "Period not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}